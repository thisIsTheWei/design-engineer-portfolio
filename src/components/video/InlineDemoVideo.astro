---
interface Props {
  src: string;
  poster: string;
  alt: string;
  class?: string;
  assetFolder: string;
}

const { class: className, src, poster, alt, assetFolder } = Astro.props;
---

<section class:list={[className, "inline-demo-video border-radius-2"]} data-video-src={assetFolder+src} data-video-label={alt}>
  <img src={assetFolder+poster} alt={alt} class="inline-demo-video__poster" />
  <div class="inline-demo-video__caption">
    <p class="body-s">{alt}</p>
  </div>
</section>

<script>
  function initInlineDemoVideo(container: HTMLElement) {
    const videoSrc = container.dataset.videoSrc;
    const videoLabel = container.dataset.videoLabel;
    if (videoSrc) {
      const video = document.createElement('video');
      video.src = videoSrc;
      video.controls = false;
      video.muted = true;
      video.playsInline = true;
      video.loop = true;
      video.autoplay = true;
      if(videoLabel) {
        video.setAttribute('aria-label', videoLabel);
      }
      
      const poster = container.querySelector('.inline-demo-video__poster');

      if (poster) {
        container.replaceChild(video, poster);
      }
    }
  }

  const observerOptions = {
    root: null,
    rootMargin: '0px',
    threshold: 0.1
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        initInlineDemoVideo(entry.target as HTMLElement);
        observer.unobserve(entry.target);
      }
    });
  }, observerOptions);

  document.addEventListener('astro:page-load', () => {
    const videoContainers = document.querySelectorAll('.inline-demo-video');
    videoContainers.forEach(container => {
      observer.observe(container);
    });
  });
</script>
<style lang="scss">
  @use "../../styles/abstracts/" as *;
  .inline-demo-video {
    --video-width: 100%;

    max-width: 100%;
    overflow: clip;
    position: relative;
    width: 100%;

    &__poster {
      width: 100%;
      height: auto;
      display: block;
    }

    &__caption {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      background-color: rgba(0, 0, 0, 0.7);
      color: white;
      padding: $size-2;
      text-align: center;
      p {
        max-width: 100%;
      }
    }
  }

</style>