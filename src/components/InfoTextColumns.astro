---
import type { IntersectionOptions } from '../scripts/types/intersections';
import InfoTextColumn from "./InfoTextColumn.astro";
import {getFadeInDataAttribute} from "../scripts/utils/intersection-observer/fadein-intersection-observer";
interface Info {
  content: {}
}

interface Props {
  class?: string,
  data: Record<InfoTextColumnType, string>;
  fadeIn?: boolean | IntersectionOptions;
}
type InfoTextColumnType = 'ROLE' | 'COMPANY' | 'TOOL' | 'YEAR';
const { class: className, data, fadeIn = false } = Astro.props;
const fadeInDataAttribute = getFadeInDataAttribute(fadeIn);
---

<section class:list={[className, "info-text-columns-container", "grid"]}
         {...fadeInDataAttribute !== undefined ? { 'data-fade-in-intersect': fadeInDataAttribute } : {}}>
  <div class="info-text-columns grid even-columns">
    {Object.entries(data).map(([key, value]) => (
      <InfoTextColumn 
        type={key as InfoTextColumnType} 
        content={value} 
      />
    ))}
  </div>
</section>

<style lang="scss">
  @use "../styles/abstracts/" as *;

  .info-text-columns-container {

    @include mq(l) {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  .info-text-columns {
    --_grid-column-gap: $size-9;
    --_grid-row-gap: $size-9;
  }
</style>