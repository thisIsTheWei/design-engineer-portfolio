---
import type { IntersectionOptions } from "../scripts/types/intersections";
import Cta from "./composable/Cta.astro";
import HighlightHeading from "./composable/HighlightHeading.astro";
import { getFadeInDataAttribute } from "../scripts/utils/intersection-observer/fadein-intersection-observer";

interface Props {
  class?: string;
  work: {
    data: {
      eyebrow: string;
      title: string;
      description: string;
      feature_image: {
        src: string;
        alt: string;
      };
      urls: string;
      keywords: string[];
      enable_case_study: boolean;
      theme: "primary" | "secondary" | "tertiary" | "quaternary";
      order: number;
    };
    slug: string;
    id: string;
  };
  fadeIn?: boolean | IntersectionOptions;
}

const { class: className, work, fadeIn = false }: Props = Astro.props;
const {
  eyebrow,
  title,
  feature_image,
  urls,
  keywords = [],
  enable_case_study,
  theme,
  order,
} = work.data;
const fadeInDataAttribute = getFadeInDataAttribute(fadeIn);
---

<div
  class:list={[className, "featured-work-container"]}
  {...fadeInDataAttribute !== undefined
    ? {
        'data-fade-in-intersect data-animation-fade-in="from-bottom"':
          fadeInDataAttribute,
      }
    : {}}
>
  <div class="featured-work" data-theme={theme}>
    <div
      class="featured-work__image"
      data-animation-block-slide="slide-out-right"
    >
      <img
        src={feature_image.src}
        alt={feature_image.alt}
        loading="lazy"
        decoding="async"
        transition:name={`case-study-${order}-feature-image`}
        data-animation-slide="scale-in-down"
      />
    </div>
    <div class="featured-work__content">
      <p class="eyebrow" transition:name={`case-study-${order}-eyebrow`}>
        {eyebrow}
      </p>
      <HighlightHeading
        title={title}
        theme={theme}
        level={3}
        class="h3"
        transitionName={`case-study-${order}-heading`}
      />
      {
        keywords.length > 0 && (
          <ul
            class="tags featured-work__tags"
            transition:name={`case-study-${order}-keywords`}
          >
            {keywords.map((keyword) => (
              <li>{keyword}</li>
            ))}
          </ul>
        )
      }
    </div>
    <div class="featured-work__ctas">
      {
        enable_case_study && (
          <Cta href={`/work/${work.id}`} type="primary">
            View Case Study
          </Cta>
        )
      }
      {
        urls && (
          <Cta href={urls[0]} type="secondary">
            See Live
          </Cta>
        )
      }
    </div>
  </div>
</div>
<style lang="scss">
  @use "../styles/abstracts/index" as *;
  @use "../styles/utilities/index" as *;

  .featured-work-container {
    container-type: inline-size;

    @include mq(m) {
      &:nth-child(3n + 3) [data-animation-block-slide] {
        --animation-delay: 0.6s;
      }
    }
  }

  .span-2 {
    .featured-work__image {
      @include mq(m) {
        aspect-ratio: 16 / 7;
      }
    }
    .featured-work {
      grid-column-gap: $size-10;
    }
  }

  .featured-work {
    --_clr-reveal-box: trasnparent;

    container-type: inline-size;
    display: grid;
    gap: $size-8;
    grid-template-columns: 1fr;

    &__image {
      aspect-ratio: 4 / 3;
      border-radius: var(--border-radius-2, $border-radius-2);
      overflow: hidden;
      position: relative;

      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center;
      }
    }

    &__tags {
      margin-block-start: $size-6;
    }

    &__ctas {
      display: flex;
      flex-direction: column;
      gap: $size-4;
    }

    @include mq(m) {
      &__ctas {
        align-items: end;
        display: flex;
        flex-direction: row;
        gap: $size-4;
      }
    }

    @container (width > 940px) {
      &__image {
        grid-column: span 2;
      }

      &__ctas {
        justify-content: flex-end;
      }
    }
  }
</style>
