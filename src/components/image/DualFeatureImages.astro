---
import type {IntersectionOptions} from "../../scripts/types/intersections";
import {getFadeInDataAttribute} from "../../scripts/utils/intersection-observer/fadein-intersection-observer";
interface Props {
  class?: string,
  leftSrc?: string,
  leftAlt?: string,
  rightSrc?: string,
  rightAlt?: string,
  type?: string,
  assetFolder: string;
  fadeIn?: boolean | IntersectionOptions;
}
const { class: className, leftSrc, leftAlt, rightSrc, rightAlt, type, assetFolder, fadeIn = false } = Astro.props;
const fadeInDataAttribute = getFadeInDataAttribute(fadeIn);
---

<section class:list={[className, "dual-feature-images grid"]} data-type={type}
         {...fadeInDataAttribute !== undefined ? { 'data-fade-in-intersect data-animation-fade-in="from-bottom"': fadeInDataAttribute } : {}}>
  <div class="dual-feature-image dual-feature-image__left border-radius-2">
    <div class="dual-feature-image__block" data-animation-block-slide="slide-out-right">
      <img src={assetFolder+leftSrc}
           alt={leftAlt}
           loading="lazy"
           decoding="async"
           {...(fadeIn ? { 'data-animation-scale': 'in-down' } : {})}/>
    </div>
  </div>
  <div class="dual-feature-image dual-feature-image__right border-radius-2">
    <div class="dual-feature-image__block" data-animation-block-slide="slide-out-right">
      <img
          src={assetFolder+rightSrc}
          alt={rightAlt}
          loading="lazy"
          decoding="async"
          {...(fadeIn ? { 'data-animation-scale': 'in-down' } : {})}/>
    </div>
  </div>
</section>

<style lang="scss">
  @use "../../styles/abstracts/index" as *;
  @use "../../styles/utilities/index" as *;

  .dual-feature-images {
    grid-template-columns: 1fr 1fr;

    &[data-type="right"] {
      grid-template-columns: 2fr 3fr;
    }

    &[data-type="left"] {
      grid-template-columns: 3fr 2fr;
    }

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center;
    }
  }
  .dual-feature-image__block{
    height: 100%;
    width: 100%;
    position: relative;
  }

  [data-type="right"] {
    .dual-feature-image__right {
      aspect-ratio: 7/5;
    }
    .dual-feature-image__right [data-animation-block-slide] {
      --animation-delay: 0.6s;
    }
  }

  [data-type="left"] {
    .dual-feature-image__left {
      aspect-ratio: 7/5
    }
    .dual-feature-image__right [data-animation-block-slide] {
      --animation-delay: 0.6s;
    }
  }

  [data-type="even"] {
    .dual-feature-image__left,
    .dual-feature-image__right {
      aspect-ratio: 16 / 21.75;
    }
  }

  .dual-feature-image {
    overflow: clip;
  }

  [data-animation-block-slide] {
    --clr-reveal-block: white;
  }
</style>